generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String        @id @default(uuid())
  firstName   String
  username    String?       @unique
  email       String
  googleId    String        @unique
  lastName    String?
  picture     String?
  token       String?
  latitude    Float?
  longitude   Float?
  radius      Int?
  clubMembers ClubMembers[]
  Discussions Discussions[]
  Posts       Posts[]
  books       UserBooks[]
}

model Books {
  id          String      @id @default(uuid())
  title       String
  author      String
  description String?
  paperback   Boolean?
  content     String?
  image       String?
  genre       Genre[]
  UserBooks   UserBooks[]
}

model Genre {
  id      String  @id @default(uuid())
  booksId String?
  name    String
  books   Books?  @relation(fields: [booksId], references: [id])
}

model UserBooks {
  id        String  @id @default(uuid())
  wishlist  Boolean @default(false)
  owned     Boolean @default(false)
  booksId   String
  userId    String
  rating    Float?
  thumbDown Int?
  thumbUp   Int?
  books     Books   @relation(fields: [booksId], references: [id])
  user      User    @relation(fields: [userId], references: [id])
}

model bookdata {
  asin       String
  ISBN10     Int    @id
  author     String
  image_url  String
  rating     String
  title      String
  url        String
  categories String
}

model Clubs {
  id          String        @id @default(uuid())
  name        String
  clubMembers ClubMembers[]
  Discussions Discussions[]
}

model ClubMembers {
  id     String @id @default(uuid())
  userId String
  clubId String
  club   Clubs  @relation(fields: [clubId], references: [id])
  user   User   @relation(fields: [userId], references: [id])
}

model Discussions {
  id      String  @id @default(uuid())
  userId  String
  title   String
  clubsId String
  clubs   Clubs   @relation(fields: [clubsId], references: [id])
  creator User    @relation(fields: [userId], references: [id])
  Posts   Posts[]
}

model Posts {
  id            String      @id @default(uuid())
  userId        String
  body          String
  discussionsId String
  discussion    Discussions @relation(fields: [discussionsId], references: [id])
  user          User        @relation(fields: [userId], references: [id])
}
